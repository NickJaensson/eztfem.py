import numpy as np

def gauss_legendre(shape, **kwargs):
    """
    Gauss-Legendre integration points and weights
    
    Args:
        shape: shape of the domain:
            'line', interval [-1,1]
            'quad', domain [-1,1]x[-1,1]
            'triangle', reference triangle, left-lower half of [0,1]x[0,1]
        **kwargs: Optional keyword arguments to set optional parameters:
                  'n': the number of integration points in one direction. This only applies
                       to shape='line' and shape='quad', where the number of integration
                       points will be n and n^2, respectively.
                  'p': the order of the integration rule (=order polynomial integrated exact).
                       This only applies to shape='triangle'.
    Returns:
        x, w: coordinates and weights of the integration scheme.
    """
    n = kwargs.get('n', -1)
    p = kwargs.get('p', -1)

    if shape == 'line':
        if n < 0:
            raise ValueError('n must be specified for the integration rule')
        x, w = gauss_legendre_line(n)
    elif shape == 'quad':
        if n < 0:
            raise ValueError('n must be specified for the integration rule')
        x, w = gauss_legendre_quad(n)
    elif shape == 'triangle':
        if p < 0:
            raise ValueError('p must be specified for the integration rule')
        x, w = gauss_legendre_triangle(p)
    else:
        if isinstance(shape, str):
            ch = f'Invalid shape: {shape}'
        else:
            ch = 'shape must be a string'
        raise ValueError(ch)
    
    return x, w


# Gauss Legendre in 1D defined on the interval [-1,1]
def gauss_legendre_line(n):
    """
    n = number of integration points
    x(i), w(i), i=1,n = the reference coordinates and weights of the
      integration points
    """

    x = np.zeros(n)
    w = np.zeros(n)

    match n:
        case 1:
      
          x[0] = 0
          w[0] = 2
      
        case 2:
      
          x[0] = 2 * .2113248654051871177454256097490212 - 1
          x[1] = -x[0]
          w[:] = 1
      
        case 3:
      
          x[0] = 2 * .1127016653792583114820734600217600 - 1
          x[1] = 0
          x[2] = -x[0]
          w[0:2] = [ 5/9, 8/9 ]
          w[2] = w[0]

        case 4:
      
          x[0:2] = 2 * np.array([ .0694318442029737123880267555535953,
                                  .3300094782075718675986671204483776 ]) - 1
          x[2:4] = -x[1::-1]
          w[0:2] = np.array([ .1739274225687269286865319746109997,
                              .3260725774312730713134680253890002 ]) * 2
          w[2:4] = w[1::-1]

        case 5:
      
          x[0:2] = 2 * np.array([ .0469100770306680036011865608503036,
                                  .2307653449471584544818427896498955 ]) - 1
          x[2] = 0
          x[3:5] = -x[1::-1]
          w[0:3] = np.array([ .1184634425280945437571320203599586,
                              .2393143352496832340206457574178190,
                              128/450 ]) * 2
          w[3:5] = w[1::-1]
      
        case 6:
      
          x[0:3] = -2 * np.array([ .9662347571015760139061507772469973,
                                   .8306046932331322568306997975099527,
                                   .6193095930415984543152508608403560 ]) + 1
          x[3:6] = -x[2::-1]
          w[0:3] = np.array([ .0856622461895851725201480710863664,
                              .1803807865240693037849167569188581,
                              .2339569672863455236949351719947755 ]) * 2
          w[3:6] = w[2::-1]
      
        case 7:
      
          x[0:3] = -2 * np.array([ .9745539561713792622630948420239256,
                                  .8707655927996972199319323866403942,
                                  .7029225756886985834533032060384807 ]) + 1
          x[3] = 0
          x[4:7] = -x[2::-1]
          w[0:4] = np.array([ .0647424830844348466353057163395410,
                              .1398526957446383339507338857118898,
                              .1909150252525594724751848877444876,
                              .2089795918367346938775510204081633 ]) * 2
          w[4:7] = w[2::-1]
      
        case 8:
      
          x[0:4] = -2 * np.array([ .9801449282487681158417804342847365,
                                   .8983332387068133697957769682379152,
                                   .7627662049581644929088695245946232,
                                   .5917173212478249024697380711800920 ]) + 1
          x[4:8] = -x[3::-1]
          w[0:4] = np.array([ .0506142681451881295762656771549811,
                              .1111905172266872352721779972131204,
                              .1568533229389436436689811009933007,
                              .1813418916891809914825752246385978 ]) * 2
          w[4:8] = w[3::-1]
      
        case 9:
      
          x[0:4] = -2 * np.array([ .9840801197538130449177881014518364,
                                   .9180155536633178971497148940348674,
                                   .8066857163502951986543510196707371,
                                   .6621267117019044645192690073216683 ]) + 1
          x[4] = 0
          x[5:9] = -x[3::-1]
          w[0:5] = np.array([ .0406371941807872059859460790552618,
                              .0903240803474287020292360156214564,
                              .1303053482014677311593714347093164,
                              .1561735385200014200343152032922218,
                              .1651196775006298815822625346434870 ]) * 2
          w[5:9] = w[3::-1]
      
        case 10:
      
          x[0:5] = -2 * np.array([ .9869532642585858600389820060422260,
                                   .9325316833444922553660483442117465,
                                   .8397047841495122031171636825574368,
                                   .7166976970646235953996329715828921,
                                   .5744371694908156054424130005648600 ]) + 1
          x[5:10] = -x[4::-1]
          w[0:5] = np.array([ .0333356721543440687967844049466659,
                              .0747256745752902965728881698288487,
                              .1095431812579910219977674671140816,
                              .1346333596549981775456134607847347,
                              .1477621123573764350869464973256692 ]) * 2
          w[5:10] = w[4::-1]
      
        case 11:
      
          x[0:5] = -2 * np.array([ .9891143290730284964019690005614287,
                                   .9435312998840476495375788846519636,
                                   .8650760027870246620467081260155767,
                                   .7595480646034059079628628347293048,
                                   .6347715779761724861657659927004308 ]) + 1
          x[5] = 0
          x[6:11] = -x[4::-1]
          w[0:6] = np.array([ .0278342835580868332413768602212743,
                              .0627901847324523123173471496119701,
                              .0931451054638671257130488207158279,
                              .1165968822959952399592618524215876,
                              .1314022722551233310903444349452546,
                              .1364625433889503153572417641681711 ]) * 2
          w[6:11] = w[4::-1]
      
        case 12:
      
          x[6:12] = np.array([ .1252334085114689154724414,
                              .3678314989981801937526915,
                              .5873179542866174472967024,
                              .7699026741943046870368938,
                              .9041172563704748566784659,
                              .9815606342467192506905491 ])
          x[0:6] = -x[11:5:-1]
          w[6:12] = np.array([ .2491470458134027850005624,
                               .2334925365383548087608499,
                               .2031674267230659217490645,
                               .1600783285433462263346525,
                               .1069393259953184309602547,
                               .0471753363865118271946160 ])
          w[0:6] = w[11:5:-1]
      
        case 13:
      
          x[6:13] = np.array([ .0000000000000000000000000,
                               .2304583159551347940655281,
                               .4484927510364468528779129,
                               .6423493394403402206439846,
                               .8015780907333099127942065,
                               .9175983992229779652065478,
                               .9841830547185881494728294 ])
          x[0:6] = -x[12:6:-1]
          w[6:13] = np.array([ .2325515532308739101945895,
                               .2262831802628972384120902,
                               .2078160475368885023125232,
                               .1781459807619457382800467,
                               .1388735102197872384636018,
                               .0921214998377284479144218,
                               .0404840047653158795200216 ])
          w[0:6] = w[12:6:-1]
      
        case 14:
      
          x[7:14] = np.array([ .1080549487073436620662447,
                               .3191123689278897604356718,
                               .5152486363581540919652907,
                               .6872929048116854701480198,
                               .8272013150697649931897947,
                               .9284348836635735173363911,
                               .9862838086968123388415973 ])
          x[0:7] = -x[13:6:-1]
          w[7:14] = np.array([ .2152638534631577901958764,
                               .2051984637212956039659241,
                               .1855383974779378137417166,
                               .1572031671581935345696019,
                               .1215185706879031846894148,
                               .0801580871597602098056333,
                               .0351194603317518630318329 ])
          w[0:7] = w[13:6:-1]
      
        case 15:
      
          x[7:15] = np.array([ .0000000000000000000000000,
                               .2011940939974345223006283,
                               .3941513470775633698972074,
                               .5709721726085388475372267,
                               .7244177313601700474161861,
                               .8482065834104272162006483,
                               .9372733924007059043077589,
                               .9879925180204854284895657 ])
          x[0:7] = -x[14:7:-1]
          w[7:15] = np.array([ .2025782419255612728806202,
                               .1984314853271115764561183,
                               .1861610000155622110268006,
                               .1662692058169939335532009,
                               .1395706779261543144478048,
                               .1071592204671719350118695,
                               .0703660474881081247092674,
                               .0307532419961172683546284 ])
          w[0:7] = w[14:7:-1]
      
        case 16:
      
          x[8:16] = np.array([ .0950125098376374401853193,
                               .2816035507792589132304605,
                               .4580167776572273863424194,
                               .6178762444026437484466718,
                               .7554044083550030338951012,
                               .8656312023878317438804679,
                               .9445750230732325760779884,
                               .9894009349916499325961542 ])
          x[0:8] = -x[15:7:-1]
          w[8:16] = np.array([ .1894506104550684962853967,
                               .1826034150449235888667637,
                               .1691565193950025381893121,
                               .1495959888165767320815017,
                               .1246289712555338720524763,
                               .0951585116824927848099251,
                               .0622535239386478928628438,
                               .0271524594117540948517806 ])
          w[0:8] = w[15:7:-1]
      
        case 17:
      
          x[8:17] = np.array([ .0000000000000000000000000,
                               .1784841814958478558506775,
                               .3512317634538763152971855,
                               .5126905370864769678862466,
                               .6576711592166907658503022,
                               .7815140038968014069252301,
                               .8802391537269859021229557,
                               .9506755217687677612227170,
                               .9905754753144173356754340 ])
          x[0:8] = -x[16:8:-1]
          w[8:17] = np.array([ .1794464703562065254582656,
                               .1765627053669926463252710,
                               .1680041021564500445099707,
                               .1540457610768102880814316,
                               .1351363684685254732863200,
                               .1118838471934039710947884,
                               .0850361483171791808835354,
                               .0554595293739872011294402,
                               .0241483028685479319601100 ])
          w[0:8] = w[16:8:-1]
      
        case 18:
      
          x[9:18] = np.array([ .0847750130417353012422619,
                               .2518862256915055095889729,
                               .4117511614628426460359318,
                               .5597708310739475346078715,
                               .6916870430603532078748911,
                               .8037049589725231156824175,
                               .8926024664975557392060606,
                               .9558239495713977551811959,
                               .9915651684209309467300160 ])
          x[0:9] = -x[17:8:-1]
          w[9:18] = np.array([ .1691423829631435918406565,
                               .1642764837458327229860538,
                               .1546846751262652449254180,
                               .1406429146706506512047313,
                               .1225552067114784601845191,
                               .1009420441062871655628140,
                               .0764257302548890565291297,
                               .0497145488949697964533349,
                               .0216160135264833103133427 ])
          w[0:9] = w[17:8:-1]
      
        case 19:
      
          x[9:19] = np.array([ .0000000000000000000000000,
                               .1603586456402253758680961,
                               .3165640999636298319901173,
                               .4645707413759609457172671,
                               .6005453046616810234696382,
                               .7209661773352293786170959,
                               .8227146565371428249789225,
                               .9031559036148179016426609,
                               .9602081521348300308527788,
                               .9924068438435844031890177 ])
          x[0:9] = -x[18:9:-1]
          w[9:19] = np.array([ .1610544498487836959791636,
                               .1589688433939543476499564,
                               .1527660420658596667788554,
                               .1426067021736066117757461,
                               .1287539625393362276755158,
                               .1115666455473339947160239,
                               .0914900216224499994644621,
                               .0690445427376412265807083,
                               .0448142267656996003328382,
                               .0194617882297264770363120 ])
          w[0:9] = w[18:9:-1]
      
        case 20:
      
          x[10:20] = np.array([ .0765265211334973337546404,
                                .2277858511416450780804962,
                                .3737060887154195606725482,
                                .5108670019508270980043641,
                                .6360536807265150254528367,
                                .7463319064601507926143051,
                                .8391169718222188233945291,
                                .9122344282513259058677524,
                                .9639719272779137912676661,
                                .9931285991850949247861224 ])
          x[0:10] = -x[19:9:-1]
          w[10:20] = np.array([ .1527533871307258506980843,
                                .1491729864726037467878287,
                                .1420961093183820513292983,
                                .1316886384491766268984945,
                                .1181945319615184173123774,
                                .1019301198172404350367501,
                                .0832767415767047487247581,
                                .0626720483341090635695065,
                                .0406014298003869413310400,
                                .0176140071391521183118620 ])
          w[0:10] = w[19:9:-1]

        case _:
    
          raise ValueError(f"Invalid number of points, n = {n}")

    return x, w

# Gauss Legendre in 2D defined on the region [-1,1]x[-1,1]
def gauss_legendre_quad(n):
    """
    n = number of integration points in one dimension
    x(i,1:2), w(i), i=1,n^2 = the reference coordinates and weights of
       the integration points
    """
    x1, w1 = gauss_legendre_line(n)

    m = n**2
    x = np.zeros((m, 2))
    w = np.zeros(m)

    for i in range(n):
        for j in range(n):
            ip = i + n * (j)
            x[ip, 0] = x1[i]
            x[ip, 1] = x1[j]
            w[ip] = w1[i] * w1[j]

    return x, w

def gauss_legendre_triangle(n):
    # Implementation of gauss_legendre_triangle
    raise NotImplementedError