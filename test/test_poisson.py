# this test was automatically generated using create_pytfem_tests_poisson.m
# run with: python -m unittest test_poisson.py
import numpy as np
import unittest
import sys
sys.path.append('..')
import eztfem as ezt
from scipy.sparse.linalg import spsolve
from examples.poisson.func import func
class TestPytfem(unittest.TestCase):
  def test_quadrilaterial2d(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    mesh_ez = ezt.Mesh()
    mesh_ez.ndim = 2
    mesh_ez.nnodes = 35
    mesh_ez.elshape = 6
    mesh_ez.nelem = 6
    mesh_ez.elnumnod = 9
    mesh_ez.npoints = 4
    mesh_ez.ncurves = 4
    mesh_ez.topology = np.array([
    [           1,           3,           5,          15,          17,          19,],
    [           2,           4,           6,          16,          18,          20,],
    [           3,           5,           7,          17,          19,          21,],
    [          10,          12,          14,          24,          26,          28,],
    [          17,          19,          21,          31,          33,          35,],
    [          16,          18,          20,          30,          32,          34,],
    [          15,          17,          19,          29,          31,          33,],
    [           8,          10,          12,          22,          24,          26,],
    [           9,          11,          13,          23,          25,          27,],
    ],dtype=int)
    mesh_ez.coor = np.array([
    [   1.0000000000000000e+00,   1.0000000000000000e+00,],
    [   1.1517245721139653e+00,   1.1517245721139653e+00,],
    [   1.3034491442279306e+00,   1.3034491442279306e+00,],
    [   1.4696550855772070e+00,   1.4696550855772070e+00,],
    [   1.6358610269264831e+00,   1.6358610269264831e+00,],
    [   1.8179305134632415e+00,   1.8179305134632415e+00,],
    [   2.0000000000000000e+00,   2.0000000000000000e+00,],
    [   1.0000000000000000e+00,   1.5999999999999999e+00,],
    [   1.1492559190130747e+00,   1.7268045687353082e+00,],
    [   1.2984486056633116e+00,   1.8527810453439981e+00,],
    [   1.4643552159244160e+00,   1.9919613880650464e+00,],
    [   1.6302554777399005e+00,   2.1301790685571129e+00,],
    [   1.8150850327965331e+00,   2.2830400521102816e+00,],
    [   2.0000000000000000e+00,   2.4347826086956523e+00,],
    [   1.0000000000000000e+00,   2.1999999999999997e+00,],
    [   1.1467883117586037e+00,   2.3026405740745313e+00,],
    [   1.2934523022670010e+00,   2.4036972127722076e+00,],
    [   1.4590600374990146e+00,   2.5160079875243984e+00,],
    [   1.6246551045642206e+00,   2.6264024997484290e+00,],
    [   1.8122408664561673e+00,   2.7491527763685539e+00,],
    [   2.0000000000000000e+00,   2.8695652173913047e+00,],
    [   1.0000000000000000e+00,   3.0999999999999996e+00,],
    [   1.1431646510457152e+00,   3.1500624011542033e+00,],
    [   1.2862686502980520e+00,   3.1993911378850797e+00,],
    [   1.4516254211702346e+00,   3.2555034653504360e+00,],
    [   1.6169758646364985e+00,   3.3106626441973068e+00,],
    [   1.8084436924286478e+00,   3.3733461490061298e+00,],
    [   2.0000000000000000e+00,   3.4347826086956523e+00,],
    [   1.0000000000000000e+00,   4.0000000000000000e+00,],
    [   1.1395394545160640e+00,   4.0000000000000000e+00,],
    [   1.2790789090321277e+00,   4.0000000000000000e+00,],
    [   1.4441842181935745e+00,   4.0000000000000000e+00,],
    [   1.6092895273550212e+00,   4.0000000000000000e+00,],
    [   1.8046447636775107e+00,   4.0000000000000000e+00,],
    [   2.0000000000000000e+00,   4.0000000000000000e+00,],
    ])
    mesh_ez.points = np.array([
               1,
               7,
              35,
              29,
    ],dtype=int)
    mesh_ez.curves.append(ezt.Geometry())
    mesh_ez.curves[0].elshape = 2
    mesh_ez.curves[0].ndim = 2
    mesh_ez.curves[0].elnumnod = 3
    mesh_ez.curves[0].nnodes = 7
    mesh_ez.curves[0].nelem = 3
    mesh_ez.curves[0].nodes = np.array([
               1,
               2,
               3,
               4,
               5,
               6,
               7,
    ],dtype=int)
    mesh_ez.curves[0].topology = np.array([
    [
    [           1,           1,],
    [           3,           3,],
    [           5,           5,],
    ],
    [
    [           2,           2,],
    [           4,           4,],
    [           6,           6,],
    ],
    [
    [           3,           3,],
    [           5,           5,],
    [           7,           7,],
    ],
    ],dtype=int)
    mesh_ez.curves[0].topology = mesh_ez.curves[0].topology - 1 # Python indexing
    mesh_ez.curves[0].nodes = mesh_ez.curves[0].nodes - 1 # Python indexing
    mesh_ez.curves.append(ezt.Geometry())
    mesh_ez.curves[1].elshape = 2
    mesh_ez.curves[1].ndim = 2
    mesh_ez.curves[1].elnumnod = 3
    mesh_ez.curves[1].nnodes = 5
    mesh_ez.curves[1].nelem = 2
    mesh_ez.curves[1].nodes = np.array([
               7,
              14,
              21,
              28,
              35,
    ],dtype=int)
    mesh_ez.curves[1].topology = np.array([
    [
    [           1,           7,],
    [           3,          21,],
    ],
    [
    [           2,          14,],
    [           4,          28,],
    ],
    [
    [           3,          21,],
    [           5,          35,],
    ],
    ],dtype=int)
    mesh_ez.curves[1].topology = mesh_ez.curves[1].topology - 1 # Python indexing
    mesh_ez.curves[1].nodes = mesh_ez.curves[1].nodes - 1 # Python indexing
    mesh_ez.curves.append(ezt.Geometry())
    mesh_ez.curves[2].elshape = 2
    mesh_ez.curves[2].ndim = 2
    mesh_ez.curves[2].elnumnod = 3
    mesh_ez.curves[2].nnodes = 7
    mesh_ez.curves[2].nelem = 3
    mesh_ez.curves[2].nodes = np.array([
              35,
              34,
              33,
              32,
              31,
              30,
              29,
    ],dtype=int)
    mesh_ez.curves[2].topology = np.array([
    [
    [           1,          35,],
    [           3,          33,],
    [           5,          31,],
    ],
    [
    [           2,          34,],
    [           4,          32,],
    [           6,          30,],
    ],
    [
    [           3,          33,],
    [           5,          31,],
    [           7,          29,],
    ],
    ],dtype=int)
    mesh_ez.curves[2].topology = mesh_ez.curves[2].topology - 1 # Python indexing
    mesh_ez.curves[2].nodes = mesh_ez.curves[2].nodes - 1 # Python indexing
    mesh_ez.curves.append(ezt.Geometry())
    mesh_ez.curves[3].elshape = 2
    mesh_ez.curves[3].ndim = 2
    mesh_ez.curves[3].elnumnod = 3
    mesh_ez.curves[3].nnodes = 5
    mesh_ez.curves[3].nelem = 2
    mesh_ez.curves[3].nodes = np.array([
              29,
              22,
              15,
               8,
               1,
    ],dtype=int)
    mesh_ez.curves[3].topology = np.array([
    [
    [           1,          29,],
    [           3,          15,],
    ],
    [
    [           2,          22,],
    [           4,           8,],
    ],
    [
    [           3,          15,],
    [           5,           1,],
    ],
    ],dtype=int)
    mesh_ez.curves[3].topology = mesh_ez.curves[3].topology - 1 # Python indexing
    mesh_ez.curves[3].nodes = mesh_ez.curves[3].nodes - 1 # Python indexing
    # compensate for zero-based indexing
    mesh_ez.topology = mesh_ez.topology - 1 # Python indexing
    mesh_ez.points = mesh_ez.points - 1 # Python indexing
    self.assertTrue(mesh_py==mesh_ez,'quadrilateral2d failed test!' )
  def test_problem_definition(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    problem_ez = ezt.Problem(mesh_py,elementdof_py)
    problem_ez.nphysq = 1
    problem_ez.nvec = 2
    problem_ez.vec_elnumdegfd = np.array([
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    ],dtype=int)
    problem_ez.vec_nodnumdegfd = np.array([
    [           0,           0,],
    [           1,           2,],
    [           2,           4,],
    [           3,           6,],
    [           4,           8,],
    [           5,          10,],
    [           6,          12,],
    [           7,          14,],
    [           8,          16,],
    [           9,          18,],
    [          10,          20,],
    [          11,          22,],
    [          12,          24,],
    [          13,          26,],
    [          14,          28,],
    [          15,          30,],
    [          16,          32,],
    [          17,          34,],
    [          18,          36,],
    [          19,          38,],
    [          20,          40,],
    [          21,          42,],
    [          22,          44,],
    [          23,          46,],
    [          24,          48,],
    [          25,          50,],
    [          26,          52,],
    [          27,          54,],
    [          28,          56,],
    [          29,          58,],
    [          30,          60,],
    [          31,          62,],
    [          32,          64,],
    [          33,          66,],
    [          34,          68,],
    [          35,          70,],
    ],dtype=int)
    problem_ez.vec_numdegfd = np.array([
              35,
              70,
    ],dtype=int)
    problem_ez.elnumdegfd = np.array([
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
    ],dtype=int)
    problem_ez.nodnumdegfd = np.array([
               0,
               1,
               2,
               3,
               4,
               5,
               6,
               7,
               8,
               9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
    ],dtype=int)
    problem_ez.numdegfd = 35
    problem_ez.maxnoddegfd = 1
    problem_ez.maxvecnoddegfd = 2
    self.assertTrue(problem_py==problem_ez,'problem_definition failed test!' )
  def test_user(self):
    user_ez = ezt.User()
    user_ez.xr = np.array([
    [  -7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [   0.0000000000000000e+00,  -7.7459666924148340e-01,],
    [   7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [  -7.7459666924148340e-01,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   7.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -7.7459666924148340e-01,   7.7459666924148340e-01,],
    [   0.0000000000000000e+00,   7.7459666924148340e-01,],
    [   7.7459666924148340e-01,   7.7459666924148340e-01,],
    ])
    user_ez.wg = np.array([
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       7.9012345679012341e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
    ])
    user_ez.phi = np.array([
    [   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,   3.9999999999999991e-01,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   1.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    ])
    user_ez.dphi = np.array([
    [
    [  -8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [  -1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [   2.3971831917184144e-02,   2.3971831917184144e-02,],
    [  -1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [   1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [  -5.0983866769659325e-01,   1.0647580015448901e+00,],
    [   6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [  -3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.2745966692414834e+00,],
    [   3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [   1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -2.7459666924148340e-01,],
    [   4.3649167310370843e-02,   0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.5491933384829668e+00,],
    ],
    [
    [   1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [   8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   5.0983866769659325e-01,   1.0647580015448901e+00,],
    [  -1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [   1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [  -2.3971831917184144e-02,   2.3971831917184144e-02,],
    [   1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [   0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [   0.0000000000000000e+00,   4.3649167310370843e-02,],
    [  -2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   0.0000000000000000e+00,   1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [   5.0000000000000000e-01,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [  -5.0000000000000000e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    ],
    [
    [  -0.0000000000000000e+00,   4.3649167310370843e-02,],
    [   0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [   1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,   1.9999999999999996e-01,],
    [   0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   1.1127016653792583e-01,   1.8872983346207420e-01,],
    [  -1.3524199845510998e-01,   1.0983866769659334e-01,],
    [   2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [  -1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0647580015448901e+00,   5.0983866769659325e-01,],
    [  -8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    [
    [   4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   2.7459666924148340e-01,],
    [  -4.3649167310370843e-02,   0.0000000000000000e+00,],
    [   1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [   3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.2745966692414834e+00,],
    [  -3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.5491933384829668e+00,],
    ],
    [
    [  -2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [   1.3524199845510998e-01,   1.0983866769659334e-01,],
    [  -1.1127016653792583e-01,   1.8872983346207420e-01,],
    [   5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -1.0647580015448901e+00,   5.0983866769659325e-01,],
    [   1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    ])
    user_ez.coorsys = 0
    user_ez.alpha = 1
    user_ez.funcnr = 4
    user_py = ezt.User();    user_py.coorsys = 0;    user_py.alpha = 1;    user_py.funcnr = 4;     user_py.func = func
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    self.assertTrue(user_py==user_ez,'users failed test!' )
  def test_gauss_legendre(self):
    user_ez = ezt.User()
    user_ez.xr = np.array([
    [  -7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [   0.0000000000000000e+00,  -7.7459666924148340e-01,],
    [   7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [  -7.7459666924148340e-01,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   7.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -7.7459666924148340e-01,   7.7459666924148340e-01,],
    [   0.0000000000000000e+00,   7.7459666924148340e-01,],
    [   7.7459666924148340e-01,   7.7459666924148340e-01,],
    ])
    user_ez.wg = np.array([
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       7.9012345679012341e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
    ])
    user_ez.phi = np.array([
    [   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,   3.9999999999999991e-01,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   1.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    ])
    user_ez.dphi = np.array([
    [
    [  -8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [  -1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [   2.3971831917184144e-02,   2.3971831917184144e-02,],
    [  -1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [   1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [  -5.0983866769659325e-01,   1.0647580015448901e+00,],
    [   6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [  -3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.2745966692414834e+00,],
    [   3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [   1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -2.7459666924148340e-01,],
    [   4.3649167310370843e-02,   0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.5491933384829668e+00,],
    ],
    [
    [   1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [   8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   5.0983866769659325e-01,   1.0647580015448901e+00,],
    [  -1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [   1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [  -2.3971831917184144e-02,   2.3971831917184144e-02,],
    [   1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [   0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [   0.0000000000000000e+00,   4.3649167310370843e-02,],
    [  -2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   0.0000000000000000e+00,   1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [   5.0000000000000000e-01,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [  -5.0000000000000000e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    ],
    [
    [  -0.0000000000000000e+00,   4.3649167310370843e-02,],
    [   0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [   1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,   1.9999999999999996e-01,],
    [   0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   1.1127016653792583e-01,   1.8872983346207420e-01,],
    [  -1.3524199845510998e-01,   1.0983866769659334e-01,],
    [   2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [  -1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0647580015448901e+00,   5.0983866769659325e-01,],
    [  -8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    [
    [   4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   2.7459666924148340e-01,],
    [  -4.3649167310370843e-02,   0.0000000000000000e+00,],
    [   1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [   3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.2745966692414834e+00,],
    [  -3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.5491933384829668e+00,],
    ],
    [
    [  -2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [   1.3524199845510998e-01,   1.0983866769659334e-01,],
    [  -1.1127016653792583e-01,   1.8872983346207420e-01,],
    [   5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -1.0647580015448901e+00,   5.0983866769659325e-01,],
    [   1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    ])
    user_ez.coorsys = 0
    user_ez.alpha = 1
    user_ez.funcnr = 4
    user_py = ezt.User()
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    check1=np.allclose(user_py.xr,user_ez.xr,atol=1e-15,rtol=0)
    check2=np.allclose(user_py.wg,user_ez.wg,atol=1e-15,rtol=0)
    self.assertTrue(check1 and check2,'gauss_legendre failed test!' )
  def test_basis_function(self):
    user_ez = ezt.User()
    user_ez.xr = np.array([
    [  -7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [   0.0000000000000000e+00,  -7.7459666924148340e-01,],
    [   7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [  -7.7459666924148340e-01,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   7.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -7.7459666924148340e-01,   7.7459666924148340e-01,],
    [   0.0000000000000000e+00,   7.7459666924148340e-01,],
    [   7.7459666924148340e-01,   7.7459666924148340e-01,],
    ])
    user_ez.wg = np.array([
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       7.9012345679012341e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
    ])
    user_ez.phi = np.array([
    [   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,   3.9999999999999991e-01,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   1.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    ])
    user_ez.dphi = np.array([
    [
    [  -8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [  -1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [   2.3971831917184144e-02,   2.3971831917184144e-02,],
    [  -1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [   1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [  -5.0983866769659325e-01,   1.0647580015448901e+00,],
    [   6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [  -3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.2745966692414834e+00,],
    [   3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [   1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -2.7459666924148340e-01,],
    [   4.3649167310370843e-02,   0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.5491933384829668e+00,],
    ],
    [
    [   1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [   8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   5.0983866769659325e-01,   1.0647580015448901e+00,],
    [  -1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [   1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [  -2.3971831917184144e-02,   2.3971831917184144e-02,],
    [   1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [   0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [   0.0000000000000000e+00,   4.3649167310370843e-02,],
    [  -2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   0.0000000000000000e+00,   1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [   5.0000000000000000e-01,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [  -5.0000000000000000e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    ],
    [
    [  -0.0000000000000000e+00,   4.3649167310370843e-02,],
    [   0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [   1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,   1.9999999999999996e-01,],
    [   0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   1.1127016653792583e-01,   1.8872983346207420e-01,],
    [  -1.3524199845510998e-01,   1.0983866769659334e-01,],
    [   2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [  -1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0647580015448901e+00,   5.0983866769659325e-01,],
    [  -8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    [
    [   4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   2.7459666924148340e-01,],
    [  -4.3649167310370843e-02,   0.0000000000000000e+00,],
    [   1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [   3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.2745966692414834e+00,],
    [  -3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.5491933384829668e+00,],
    ],
    [
    [  -2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [   1.3524199845510998e-01,   1.0983866769659334e-01,],
    [  -1.1127016653792583e-01,   1.8872983346207420e-01,],
    [   5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -1.0647580015448901e+00,   5.0983866769659325e-01,],
    [   1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    ])
    user_ez.coorsys = 0
    user_ez.alpha = 1
    user_ez.funcnr = 4
    user_py = ezt.User()
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    check1=np.allclose(user_py.phi,user_ez.phi,atol=1e-15,rtol=0)
    check2=np.allclose(user_py.dphi,user_ez.dphi,atol=1e-15,rtol=0)
    self.assertTrue(check1 and check2,'basis_functions failed test!' )
  def test_build_system(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    problem_ez = ezt.Problem(mesh_py,elementdof_py)
    problem_ez.nphysq = 1
    problem_ez.nvec = 2
    problem_ez.vec_elnumdegfd = np.array([
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    [           1,           2,],
    ],dtype=int)
    problem_ez.vec_nodnumdegfd = np.array([
    [           0,           0,],
    [           1,           2,],
    [           2,           4,],
    [           3,           6,],
    [           4,           8,],
    [           5,          10,],
    [           6,          12,],
    [           7,          14,],
    [           8,          16,],
    [           9,          18,],
    [          10,          20,],
    [          11,          22,],
    [          12,          24,],
    [          13,          26,],
    [          14,          28,],
    [          15,          30,],
    [          16,          32,],
    [          17,          34,],
    [          18,          36,],
    [          19,          38,],
    [          20,          40,],
    [          21,          42,],
    [          22,          44,],
    [          23,          46,],
    [          24,          48,],
    [          25,          50,],
    [          26,          52,],
    [          27,          54,],
    [          28,          56,],
    [          29,          58,],
    [          30,          60,],
    [          31,          62,],
    [          32,          64,],
    [          33,          66,],
    [          34,          68,],
    [          35,          70,],
    ],dtype=int)
    problem_ez.vec_numdegfd = np.array([
              35,
              70,
    ],dtype=int)
    problem_ez.elnumdegfd = np.array([
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
    ],dtype=int)
    problem_ez.nodnumdegfd = np.array([
               0,
               1,
               2,
               3,
               4,
               5,
               6,
               7,
               8,
               9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
    ],dtype=int)
    problem_ez.numdegfd = 35
    problem_ez.maxnoddegfd = 1
    problem_ez.maxvecnoddegfd = 2
    user_ez = ezt.User()
    user_ez.xr = np.array([
    [  -7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [   0.0000000000000000e+00,  -7.7459666924148340e-01,],
    [   7.7459666924148340e-01,  -7.7459666924148340e-01,],
    [  -7.7459666924148340e-01,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   7.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -7.7459666924148340e-01,   7.7459666924148340e-01,],
    [   0.0000000000000000e+00,   7.7459666924148340e-01,],
    [   7.7459666924148340e-01,   7.7459666924148340e-01,],
    ])
    user_ez.wg = np.array([
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       7.9012345679012341e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
       4.9382716049382713e-01,
       3.0864197530864201e-01,
    ])
    user_ez.phi = np.array([
    [   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,   3.9999999999999991e-01,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   1.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   6.8729833462074175e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,  -0.0000000000000000e+00,  -8.7298334620741685e-02,   3.9999999999999991e-01,],
    [  -6.0000000000000005e-02,  -3.4919333848296666e-02,   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,   1.5999999999999992e-01,],
    [   0.0000000000000000e+00,  -8.7298334620741685e-02,  -0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.8729833462074175e-01,  -0.0000000000000000e+00,  -0.0000000000000000e+00,   3.9999999999999991e-01,],
    [   7.6209992275549860e-03,  -3.4919333848296666e-02,  -6.0000000000000005e-02,   2.7491933384829664e-01,   4.7237900077244510e-01,   2.7491933384829664e-01,  -6.0000000000000005e-02,  -3.4919333848296666e-02,   1.5999999999999992e-01,],
    ])
    user_ez.dphi = np.array([
    [
    [  -8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [  -1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [   2.3971831917184144e-02,   2.3971831917184144e-02,],
    [  -1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [   1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [  -5.0983866769659325e-01,   1.0647580015448901e+00,],
    [   6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [  -3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.2745966692414834e+00,],
    [   3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [   1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -2.7459666924148340e-01,],
    [   4.3649167310370843e-02,   0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.5491933384829668e+00,],
    ],
    [
    [   1.8872983346207420e-01,   1.1127016653792583e-01,],
    [  -1.0647580015448901e+00,  -5.0983866769659325e-01,],
    [   8.7602816808281592e-01,  -8.7602816808281592e-01,],
    [   5.0983866769659325e-01,   1.0647580015448901e+00,],
    [  -1.1127016653792583e-01,  -1.8872983346207420e-01,],
    [   1.3524199845510998e-01,  -1.0983866769659334e-01,],
    [  -2.3971831917184144e-02,   2.3971831917184144e-02,],
    [   1.0983866769659334e-01,  -1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,   6.1967733539318659e-01,],
    ],
    [
    [   0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [   0.0000000000000000e+00,   4.3649167310370843e-02,],
    [  -2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   0.0000000000000000e+00,   1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,  -5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [   5.0000000000000000e-01,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   5.0000000000000000e-01,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    [  -5.0000000000000000e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -0.0000000000000000e+00,],
    ],
    [
    [  -0.0000000000000000e+00,   4.3649167310370843e-02,],
    [   0.0000000000000000e+00,  -1.9999999999999996e-01,],
    [  -0.0000000000000000e+00,  -3.4364916731037087e-01,],
    [   1.2745966692414834e+00,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   3.4364916731037087e-01,],
    [  -0.0000000000000000e+00,   1.9999999999999996e-01,],
    [   0.0000000000000000e+00,  -4.3649167310370843e-02,],
    [   2.7459666924148340e-01,   0.0000000000000000e+00,],
    [  -1.5491933384829668e+00,  -0.0000000000000000e+00,],
    ],
    [
    [   1.1127016653792583e-01,   1.8872983346207420e-01,],
    [  -1.3524199845510998e-01,   1.0983866769659334e-01,],
    [   2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [  -1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0647580015448901e+00,   5.0983866769659325e-01,],
    [  -8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    [
    [   4.3649167310370843e-02,  -0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   2.7459666924148340e-01,],
    [  -4.3649167310370843e-02,   0.0000000000000000e+00,],
    [   1.9999999999999996e-01,  -0.0000000000000000e+00,],
    [   3.4364916731037087e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,   1.2745966692414834e+00,],
    [  -3.4364916731037087e-01,  -0.0000000000000000e+00,],
    [  -1.9999999999999996e-01,   0.0000000000000000e+00,],
    [  -0.0000000000000000e+00,  -1.5491933384829668e+00,],
    ],
    [
    [  -2.3971831917184144e-02,  -2.3971831917184144e-02,],
    [   1.3524199845510998e-01,   1.0983866769659334e-01,],
    [  -1.1127016653792583e-01,   1.8872983346207420e-01,],
    [   5.0983866769659325e-01,  -1.0647580015448901e+00,],
    [   8.7602816808281592e-01,   8.7602816808281592e-01,],
    [  -1.0647580015448901e+00,   5.0983866769659325e-01,],
    [   1.8872983346207420e-01,  -1.1127016653792583e-01,],
    [   1.0983866769659334e-01,   1.3524199845510998e-01,],
    [  -6.1967733539318659e-01,  -6.1967733539318659e-01,],
    ],
    ])
    user_ez.coorsys = 0
    user_ez.alpha = 1
    user_ez.funcnr = 4
    user_py = ezt.User();    user_py.coorsys = 0;    user_py.alpha = 1;    user_py.funcnr = 4;     user_py.func = func
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    A_ez = np.array([
    [   8.8044793170850910e-01,  -1.3053562142876625e+00,   1.2973844747666005e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.4488885815925500e-01,   4.8757222333374178e-02,  -7.6494200524514167e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.9208574767599710e-01,   1.7117078354867590e-01,  -1.0670807383005437e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -1.3053562142876625e+00,   3.3085304574753138e+00,  -1.2339908661257635e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.5883166156104520e+00,   6.4996409191014093e-01,   6.5568319549762527e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   5.4714269177993535e-01,  -6.0237113036484868e-01,   1.5882926567357414e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   1.2973844747666005e-01,  -1.2339908661257635e+00,   2.4785803763204126e+00,  -1.0479263934630922e+00,   9.2089629169677445e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.3030275652594421e-01,  -1.5520333297704620e+00,   6.8997293412880578e-01,   1.3603843700218177e-01,  -7.8970403135977474e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,  -9.4334829097018486e-02,   5.2906621011457566e-01,  -4.9723740758757073e-01,   1.1399072199597049e-01,   4.7137164456558280e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.0479263934630922e+00,   2.9461869299888677e+00,  -9.7930361529968013e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.4671704684779263e+00,   2.7392742866480102e-01,   1.5129843603527293e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.7960793220380571e-01,  -4.5865440248478756e-01,   1.0203415283273845e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   9.2089629169677445e-02,  -9.7930361529968013e-01,   2.1562120975002643e+00,  -8.1911569150985808e-01,   5.5664781197510969e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.2074040473633414e-01,  -1.4432697567583055e+00,   4.1515682375043728e-01,   2.1402042171055663e-01,  -7.9608516690307315e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.6268320544725718e-02,   4.6429357483586187e-01,  -3.8347449722958227e-01,   6.2986629140938402e-02,   9.8760359908785181e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.1911569150985808e-01,   2.6993548083435299e+00,  -7.5172556881064079e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.3815547756277125e+00,  -1.2591549916766029e-01,   2.2912071039728979e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.2402472396012914e-01,  -3.2492191574963974e-01,   5.0733208164562657e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   5.5664781197510969e-02,  -7.5172556881064079e-01,   1.4731733261537971e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.2093789447206517e-01,  -1.3790819090285225e+00,   9.8788258495020334e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.0569874448416484e-02,   4.1312800149339546e-01,  -1.5031490952420920e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   4.4488885815925500e-01,  -1.5883166156104520e+00,   3.3030275652594421e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   5.2978674037487394e+00,  -5.4359490227049800e+00,   6.0255791163922434e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.9137294586369545e-01,  -9.6508520484486784e-02,  -4.6215717136938422e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   4.8757222333374178e-02,   6.4996409191014093e-01,  -1.5520333297704620e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.4359490227049800e+00,   1.2202387947408685e+01,  -5.1698350902177648e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.4672149227056102e+00,   8.0754513845147913e-01,  -8.3622034704857351e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -7.6494200524514167e-02,   6.5568319549762527e-02,   6.8997293412880578e-01,  -1.4671704684779263e+00,   3.2074040473633414e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.0255791163922434e-01,  -5.1698350902177648e+00,   9.3607877389492344e+00,  -4.3800475088116260e+00,   4.5895475062561336e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.9313377110976346e-01,  -1.4279418056062279e+00,   7.7748945194230945e-01,   2.3756865661726245e-03,  -5.0091895609158860e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   1.3603843700218177e-01,   2.7392742866480102e-01,  -1.4432697567583055e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.3800475088116260e+00,   1.0428859251152046e+01,  -4.1253999534845445e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.3194078626840853e+00,   4.1435114858604610e-01,   1.4948816333486603e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,  -7.8970403135977474e-02,   1.5129843603527293e-01,   4.1515682375043728e-01,  -1.3815547756277125e+00,   3.2093789447206517e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.5895475062561336e-01,  -4.1253999534845445e+00,   7.8515389863891070e+00,  -3.4461086156335847e+00,   3.2506865437832722e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.7807102106982812e-01,  -1.2886416581492868e+00,   4.8205040486193979e-01,   8.9183724277417442e-02,  -5.1585289828903327e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.1402042171055663e-01,  -1.2591549916766029e-01,  -1.3790819090285225e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -3.4461086156335847e+00,   9.0338879718506675e+00,  -3.1984390408938235e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.2036299334205782e+00,   2.3819395946478861e-03,   1.0288466498829757e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -7.9608516690307315e-02,   2.2912071039728979e-01,   9.8788258495020334e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.2506865437832722e-01,  -3.1984390408938235e+00,   3.4132674202570508e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.7144947204373637e-01,  -1.1881059789986070e+00,   1.2845902101131410e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -2.9208574767599710e-01,   5.4714269177993535e-01,  -9.4334829097018486e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.9137294586369545e-01,  -1.4672149227056102e+00,   2.9313377110976346e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.3687527779008049e+00,  -3.4480033844763578e+00,   3.8164723846911730e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.7430260332139875e-01,  -6.2984519524025562e-01,   3.3411928898956340e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.7920145152009641e-01,   4.7023431593293802e-01,  -4.9312742561273867e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   1.7117078354867590e-01,  -6.0237113036484868e-01,   5.2906621011457566e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -9.6508520484486784e-02,   8.0754513845147913e-01,  -1.4279418056062279e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -3.4480033844763578e+00,   7.6738946346326156e+00,  -3.2462366533885243e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.5573841284612049e+00,   1.7246555846259659e+00,  -5.7907147511379597e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.2451173284058104e-01,  -1.0142472535604425e+00,   4.4092026724199540e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [  -1.0670807383005437e-03,   1.5882926567357414e-01,  -4.9723740758757073e-01,   4.7960793220380571e-01,  -8.6268320544725718e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.6215717136938422e-02,  -8.3622034704857351e-02,   7.7748945194230945e-01,  -1.3194078626840853e+00,   2.7807102106982812e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.8164723846911730e-01,  -3.2462366533885243e+00,   5.7986325839167678e+00,  -2.6685549212502613e+00,   2.7619245473415360e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.6231095804483223e-01,  -1.4829094500323474e+00,   1.3980291856858993e+00,  -4.2266370901418893e-01,   1.4777894659949234e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.7300056852720881e-02,   5.9058508481830319e-01,  -7.8553091039684519e-01,   3.4572079762533214e-01,  -3.4879744512506639e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   1.1399072199597049e-01,  -4.5865440248478756e-01,   4.6429357483586187e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.3756865661726245e-03,   4.1435114858604610e-01,  -1.2886416581492868e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.6685549212502613e+00,   6.3556982567488678e+00,  -2.4773991357154106e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.3056405724261935e+00,   1.1619955274520901e+00,  -3.7850308658322118e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.9148284106605322e-01,  -7.4498371132978602e-01,   3.1818973068788525e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   4.7137164456558280e-03,   1.0203415283273845e-01,  -3.8347449722958227e-01,   4.2402472396012914e-01,  -8.0569874448416484e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.0091895609158860e-02,   1.4948816333486603e-02,   4.8205040486193979e-01,  -1.2036299334205782e+00,   2.7144947204373637e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.7619245473415360e-01,  -2.4773991357154106e+00,   4.6931009871650176e+00,  -1.9923868063889054e+00,   1.7915873095739554e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.3331012792101710e-01,  -1.2438416482876518e+00,   9.6279908156471539e-01,  -2.5068895386004125e-01,   1.5854405537080295e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,  -7.0931126861289176e-02,   4.6085246358428833e-01,  -5.7140082959870564e-01,   2.4110626991592338e-01,  -2.2912141454164380e-02,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.2986629140938402e-02,  -3.2492191574963974e-01,   4.1312800149339546e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.9183724277417442e-02,   2.3819395946478861e-03,  -1.1881059789986070e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.9923868063889054e+00,   5.3472912544783568e+00,  -1.8060632023857150e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.1040441772570915e+00,   6.2772820989765543e-01,  -2.1221166487073795e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.8205389795897221e-01,  -5.1191827621863395e-01,   2.1489836502794679e-01,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   9.8760359908785181e-03,   5.0733208164562657e-02,  -1.5031490952420920e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.1585289828903327e-02,   1.0288466498829757e-01,   1.2845902101131410e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.7915873095739554e-01,  -1.8060632023857150e+00,   1.9766278296738484e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.1434064992635027e-01,  -1.0605035034419501e+00,   3.1970374705202537e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.8158065351795504e-02,   3.5582315757660915e-01,  -2.1098207480870851e-01,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.7430260332139875e-01,  -1.5573841284612049e+00,   2.6231095804483223e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   7.9520356223984434e+00,  -8.6131496921912092e+00,   1.0176953779576410e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   9.4213168204357967e-01,  -9.9190250075478315e-01,   1.1396007764130381e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -6.2984519524025562e-01,   1.7246555846259659e+00,  -1.4829094500323474e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.6131496921912092e+00,   1.7416926618426459e+01,  -8.0912577242384334e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.2988100667909439e+00,   1.9144589710603079e+00,  -9.4006904561954596e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.3411928898956340e-02,  -5.7907147511379597e-01,   1.3980291856858993e+00,  -1.3056405724261935e+00,   2.3331012792101710e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0176953779576410e+00,  -8.0912577242384334e+00,   1.3245243842320779e+01,  -6.5164596232517233e+00,   7.4929838763998047e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.8907473027203095e-01,  -1.2342397301269679e+00,   1.5056942212961850e+00,  -7.3178939447497149e-01,   8.6700717639599065e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.2266370901418893e-01,   1.1619955274520901e+00,  -1.2438416482876518e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -6.5164596232517233e+00,   1.3470780199281348e+01,  -6.0245812361072870e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.0158667719362418e+00,   1.2722280615472934e+00,  -6.8159079968364056e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.4777894659949234e-02,  -3.7850308658322118e-01,   9.6279908156471539e-01,  -1.1040441772570915e+00,   2.1434064992635027e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   7.4929838763998047e-01,  -6.0245812361072870e+00,   1.0040751531343073e+01,  -4.7456425363990817e+00,   5.1678275813727592e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.5682743867778604e-01,  -9.5857812306079826e-01,   1.0055330137007541e+00,  -5.1590010398630326e-01,   6.6138507743897387e-02,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.5068895386004125e-01,   6.2772820989765543e-01,  -1.0605035034419501e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.7456425363990817e+00,   1.0287893722425414e+01,  -4.2773203729310723e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -7.9093013156382386e-01,   6.7693345465517052e-01,  -4.6746988878226858e-01,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.5854405537080295e-03,  -2.1221166487073795e-01,   3.1970374705202537e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   5.1678275813727592e-01,  -4.2773203729310723e+00,   3.9383501581975375e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.3548461831397607e-01,  -7.4685189541195685e-01,   3.2447721095924442e-01,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.7920145152009641e-01,   6.2451173284058104e-01,  -8.7300056852720881e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   9.4213168204357967e-01,  -1.2988100667909439e+00,   1.8907473027203095e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.0442078132892969e+00,  -2.1905988842004853e+00,   2.5598450091875874e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.7023431593293802e-01,  -1.0142472535604425e+00,   5.9058508481830319e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -9.9190250075478315e-01,   1.9144589710603079e+00,  -1.2342397301269679e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.1905988842004853e+00,   4.5186108016237760e+00,  -2.0629008047926458e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.9312742561273867e-02,   4.4092026724199540e-01,  -7.8553091039684519e-01,   4.9148284106605322e-01,  -7.0931126861289176e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.1396007764130381e-01,  -9.4006904561954596e-01,   1.5056942212961850e+00,  -1.0158667719362418e+00,   1.5682743867778604e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.5598450091875874e-01,  -2.0629008047926458e+00,   3.4084481931759161e+00,  -1.6315460672520419e+00,   1.8283992940188473e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   3.4572079762533214e-01,  -7.4498371132978602e-01,   4.6085246358428833e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -7.3178939447497149e-01,   1.2722280615472934e+00,  -9.5857812306079826e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.6315460672520419e+00,   3.4946951453649531e+00,  -1.5065991720042691e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -3.4879744512506639e-02,   3.1818973068788525e-01,  -5.7140082959870564e-01,   3.8205389795897221e-01,  -5.8158065351795504e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.6700717639599065e-02,  -6.8159079968364056e-01,   1.0055330137007541e+00,  -7.9093013156382386e-01,   1.3548461831397607e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.8283992940188473e-01,  -1.5065991720042691e+00,   2.5737410808871730e+00,  -1.1594157151374553e+00,   1.1843146926195131e-01,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.4110626991592338e-01,  -5.1191827621863395e-01,   3.5582315757660915e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.1590010398630326e-01,   6.7693345465517052e-01,  -7.4685189541195685e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.1594157151374553e+00,   2.6953283387794462e+00,  -1.0351052301728001e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.2912141454164380e-02,   2.1489836502794679e-01,  -2.1098207480870851e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   6.6138507743897387e-02,  -4.6746988878226858e-01,   3.2447721095924442e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.1843146926195131e-01,  -1.0351052301728001e+00,   1.0125237822249020e+00,],
    ])
    f_ez = np.array([
       2.4438408562489430e-01,
       5.7147035329776574e-01,
       5.3415915044352738e-02,
       2.7116522470760174e-02,
       1.1861626990506613e-01,
       7.0090135632075734e-01,
       2.3367190517732894e-01,
      -1.9858526411776276e-01,
      -1.1949575646529902e+00,
      -6.6393956684526612e-01,
      -2.5355547740321654e-01,
       5.1971494650077210e-01,
       1.1649653164670486e+00,
       1.6258697885352280e-01,
      -3.1508659756816054e-01,
      -6.3362237532667398e-01,
       8.6401085910486064e-03,
       1.3502863351387770e-02,
      -2.0848420532596035e-01,
      -1.3967832115036261e+00,
      -5.1440210952036414e-01,
       5.3092090907020972e-01,
       1.7139745180378905e+00,
       6.0175014388347614e-01,
       2.7398996822754063e-01,
      -3.3884795962815484e-01,
      -8.3932762613197509e-01,
      -1.6289520228798349e-01,
      -2.5201948936240931e-01,
      -8.7282636112026091e-01,
      -3.5567835816618304e-01,
      -1.8909395634637804e-01,
       2.3212146478817208e-01,
       9.7980669807892229e-01,
       3.1155489540308251e-01,
    ])
    A_py,f_py = ezt.build_system ( mesh_py, problem_py, ezt.poisson_elem, user_py)
    check1=np.allclose(A_py.toarray(),A_ez,atol=1e-12,rtol=0)
    check2=np.allclose(f_py,f_ez,atol=1e-12,rtol=0)
    self.assertTrue(check1 and check2,'build_system failed test!' )
  def test_define_essential(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    iess_ez = np.array([
               1,
               2,
               3,
               4,
               5,
               6,
               7,
               8,
              14,
              15,
              21,
              22,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
    ],dtype=int)
    iess_py = ezt.define_essential ( mesh_py, problem_py,'curves', [0,1,2,3], degfd=0 );
    self.assertTrue((iess_ez-1==iess_py).all(),'define_essential failed test!' )
  def test_fill_system_vector(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    uess_ez = np.array([
       2.0000000000000000e+00,
       1.7894922827641628e+00,
       1.3352231271200241e+00,
       1.0090605705862807e+00,
       1.1713779435923317e+00,
       1.7069890960849943e+00,
       2.0000000000000000e+00,
       6.9098300562505277e-01,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       1.2034560130526337e+00,
       1.9098300562505188e-01,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       8.2788698494546842e-02,
       1.9510565162951541e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       0.0000000000000000e+00,
       7.9654398694736606e-01,
       0.0000000000000000e+00,
       9.4557857618605246e-02,
       3.6034905359957958e-01,
       8.2554677561322154e-01,
       1.3366370176175753e+00,
       1.8175074977079950e+00,
       2.0000000000000000e+00,
    ])
    iess_py = ezt.define_essential ( mesh_py, problem_py,'curves', [0,1,2,3], degfd=0 );
    uess_py = ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [0,1], func, funcnr=3 );    ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [2,3], func, funcnr=3, f=uess_py )
    self.assertTrue(np.allclose(uess_py,uess_ez,atol=1e-15,rtol=0),'fill_system_vector failed test!' )
  def test_apply_essential(self):
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    user_py = ezt.User();    user_py.coorsys = 0;    user_py.alpha = 1;    user_py.funcnr = 4;     user_py.func = func
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    A_py,f_py = ezt.build_system ( mesh_py, problem_py, ezt.poisson_elem, user_py)
    iess_py = ezt.define_essential ( mesh_py, problem_py,'curves', [0,1,2,3], degfd=0 );
    uess_py = ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [0,1], func, funcnr=3 );    ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [2,3], func, funcnr=3, f=uess_py )
    ezt.apply_essential ( A_py, f_py, uess_py, iess_py )
    A_ez2 = np.array([
    [   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.2202387947408685e+01,  -5.1698350902177648e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.0754513845147913e-01,  -8.3622034704857351e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.1698350902177648e+00,   9.3607877389492344e+00,  -4.3800475088116260e+00,   4.5895475062561336e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.4279418056062279e+00,   7.7748945194230945e-01,   2.3756865661726245e-03,  -5.0091895609158860e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.3800475088116260e+00,   1.0428859251152046e+01,  -4.1253999534845445e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.3194078626840853e+00,   4.1435114858604610e-01,   1.4948816333486603e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   4.5895475062561336e-01,  -4.1253999534845445e+00,   7.8515389863891070e+00,  -3.4461086156335847e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.7807102106982812e-01,  -1.2886416581492868e+00,   4.8205040486193979e-01,   8.9183724277417442e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -3.4461086156335847e+00,   9.0338879718506675e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.2036299334205782e+00,   2.3819395946478861e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.0754513845147913e-01,  -1.4279418056062279e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   7.6738946346326156e+00,  -3.2462366533885243e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.7246555846259659e+00,  -5.7907147511379597e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.3622034704857351e-02,   7.7748945194230945e-01,  -1.3194078626840853e+00,   2.7807102106982812e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -3.2462366533885243e+00,   5.7986325839167678e+00,  -2.6685549212502613e+00,   2.7619245473415360e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.4829094500323474e+00,   1.3980291856858993e+00,  -4.2266370901418893e-01,   1.4777894659949234e-02,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.3756865661726245e-03,   4.1435114858604610e-01,  -1.2886416581492868e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.6685549212502613e+00,   6.3556982567488678e+00,  -2.4773991357154106e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.3056405724261935e+00,   1.1619955274520901e+00,  -3.7850308658322118e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.0091895609158860e-02,   1.4948816333486603e-02,   4.8205040486193979e-01,  -1.2036299334205782e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.7619245473415360e-01,  -2.4773991357154106e+00,   4.6931009871650176e+00,  -1.9923868063889054e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   2.3331012792101710e-01,  -1.2438416482876518e+00,   9.6279908156471539e-01,  -2.5068895386004125e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   8.9183724277417442e-02,   2.3819395946478861e-03,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.9923868063889054e+00,   5.3472912544783568e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -1.1040441772570915e+00,   6.2772820989765543e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.7246555846259659e+00,  -1.4829094500323474e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.7416926618426459e+01,  -8.0912577242384334e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -5.7907147511379597e-01,   1.3980291856858993e+00,  -1.3056405724261935e+00,   2.3331012792101710e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -8.0912577242384334e+00,   1.3245243842320779e+01,  -6.5164596232517233e+00,   7.4929838763998047e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.2266370901418893e-01,   1.1619955274520901e+00,  -1.2438416482876518e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -6.5164596232517233e+00,   1.3470780199281348e+01,  -6.0245812361072870e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.4777894659949234e-02,  -3.7850308658322118e-01,   9.6279908156471539e-01,  -1.1040441772570915e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   7.4929838763998047e-01,  -6.0245812361072870e+00,   1.0040751531343073e+01,  -4.7456425363990817e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -2.5068895386004125e-01,   6.2772820989765543e-01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,  -4.7456425363990817e+00,   1.0287893722425414e+01,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,   0.0000000000000000e+00,],
    [   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   0.0000000000000000e+00,   1.0000000000000000e+00,],
    ])
    f_ez2 = np.array([
       2.0000000000000000e+00,
       1.7894922827641628e+00,
       1.3352231271200241e+00,
       1.0090605705862807e+00,
       1.1713779435923317e+00,
       1.7069890960849943e+00,
       2.0000000000000000e+00,
       6.9098300562505277e-01,
       3.6530945700733679e+00,
      -9.1713819752171188e-01,
       9.7900784758702186e-01,
       1.3156712233946437e+00,
       7.7280297257978559e+00,
       1.2034560130526337e+00,
       1.9098300562505188e-01,
       3.0963132031141027e+00,
      -5.5673087249730824e-01,
      -2.0714401330499949e-01,
      -7.5750963365430490e-01,
      -3.8401707885415970e-03,
       8.2788698494546842e-02,
       1.9510565162951541e+00,
       1.8796731931383714e+01,
      -1.3278416020892894e+00,
       5.0081231774771751e-01,
      -5.7205203903546786e-01,
       3.4173385424493374e+00,
       7.9654398694736606e-01,
       0.0000000000000000e+00,
       9.4557857618605246e-02,
       3.6034905359957958e-01,
       8.2554677561322154e-01,
       1.3366370176175753e+00,
       1.8175074977079950e+00,
       2.0000000000000000e+00,
    ])
    check1=np.allclose(A_py.toarray(),A_ez2,atol=1e-12,rtol=0)
    check2=np.allclose(f_py,f_ez2,atol=1e-12,rtol=0)
    self.assertTrue(check1 and check2,'apply_essential failed test!' )
  def test_solve(self):
    u_ez = np.array([
       2.0000000000000000e+00,
       1.7894922827641628e+00,
       1.3352231271200241e+00,
       1.0090605705862807e+00,
       1.1713779435923317e+00,
       1.7069890960849943e+00,
       2.0000000000000000e+00,
       6.9098300562505277e-01,
       5.1297163026404269e-01,
       5.7497519247863871e-01,
       9.5059573384849261e-01,
       1.3731665922558574e+00,
       1.4935224527372197e+00,
       1.2034560130526337e+00,
       1.9098300562505188e-01,
       5.4779929725525667e-01,
       9.1160185179733921e-01,
       1.0585270846897417e+00,
       8.5836410460795187e-01,
       3.9848142300259265e-01,
       8.2788698494546842e-02,
       1.9510565162951541e+00,
       1.8492414816582494e+00,
       1.6072054326016942e+00,
       1.2467956104041003e+00,
       9.2923333121112028e-01,
       7.5741374712839615e-01,
       7.9654398694736606e-01,
       0.0000000000000000e+00,
       9.4557857618605246e-02,
       3.6034905359957958e-01,
       8.2554677561322154e-01,
       1.3366370176175753e+00,
       1.8175074977079950e+00,
       2.0000000000000000e+00,
    ])
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    user_py = ezt.User();    user_py.coorsys = 0;    user_py.alpha = 1;    user_py.funcnr = 4;     user_py.func = func
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    A_py,f_py = ezt.build_system ( mesh_py, problem_py, ezt.poisson_elem, user_py)
    iess_py = ezt.define_essential ( mesh_py, problem_py,'curves', [0,1,2,3], degfd=0 );
    uess_py = ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [0,1], func, funcnr=3 );    ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [2,3], func, funcnr=3, f=uess_py )
    ezt.apply_essential ( A_py, f_py, uess_py, iess_py )
    u_py = spsolve(A_py.tocsr(), f_py)
    #print('max diff = ',(abs(u_ez-u_py)).max())
    self.assertTrue(np.allclose(u_py,u_ez,atol=1e-12,rtol=0),'solve failed test, max diff = '+str((abs(u_ez-u_py)).max()) )
  def test_deriv_vector(self):
    gradu_ez = ezt.Vector()
    gradu_ez.vec = 2
    gradu_ez.u = np.array([
       2.2717450038275984e+00,
      -2.8558758192707008e+00,
       1.1663344929521136e+00,
      -3.3570701912562759e+00,
      -1.2177536788544376e+00,
      -2.3968676682098344e+00,
      -2.1899288687767759e-01,
      -2.7390520749121405e-01,
       1.8705703580593624e+00,
       1.1564951524407199e+00,
       1.7754155030384817e+00,
       5.0014992027690486e-01,
       2.4024150930827801e+00,
      -1.4593093432266129e+00,
      -7.1161320021880314e-01,
      -1.5075141619791237e+00,
       5.2318482272693512e-01,
      -1.0766297513451453e+00,
       1.9803343274746750e+00,
      -3.6703012490211506e-01,
       2.3462058569451685e+00,
       7.1032132486868085e-02,
       2.4644857900469077e+00,
      -2.8812221435327662e-01,
       6.9510069390554685e-01,
      -1.4009037879202368e+00,
      -8.7560364923370670e-01,
      -2.2047929967312707e+00,
       1.0472572484031886e+00,
       1.9291118166299672e+00,
       8.7656892066800118e-01,
       2.2748847271894830e+00,
       9.4719218390238580e-01,
       1.8613401081874517e+00,
      -5.0464875338879589e-01,
       5.1145321090173357e-01,
      -1.9053367233783756e+00,
      -9.7094506119192214e-01,
      -1.0005364518806448e+00,
      -1.6451089216320047e+00,
      -6.2369942360440478e-01,
      -1.0603378135211572e+00,
      -1.8404208110767684e-01,
      -1.0610166979169547e-01,
      -1.1067964664381647e+00,
      -2.7175413891309980e-01,
      -2.1207001449203551e+00,
      -3.6442613517214839e-01,
      -1.9905302273398715e+00,
      -1.7694911755110410e-01,
      -1.7285571109329978e+00,
       3.2885371091483623e-01,
      -7.1264522952543174e-01,
       1.1301242242783438e+00,
       2.1642285762877922e-01,
       1.6959946128702090e+00,
       6.4076418160222914e-02,
      -4.2295794775308675e+00,
       1.2912084788109015e+00,
      -3.8511302174951143e+00,
       2.5984714232322679e+00,
      -2.7387477552027435e+00,
       2.9565613879301162e+00,
      -9.4243664338310396e-01,
       3.2298596222165754e+00,
       8.6794194609714514e-01,
       1.6978377310740607e+00,
       2.2569865046390669e+00,
       1.7047668657225445e-01,
       2.5623882025468037e+00,
    ])
    gradu_ez.vec += -1 # compensate for Python indexing
    mesh_py = ezt.quadrilateral2d([3,2],'quad9',vertices=np.array([[1,1],[2,2],[2,4],[1,4]]),ratio=np.array([1,2,3,4]),factor=np.array([1.2,1.3,1.4,1.5]))
    elementdof_py = np.array([[1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2]]).T
    problem_py = ezt.Problem(mesh_py,elementdof_py,nphysq=1)
    user_py = ezt.User();    user_py.coorsys = 0;    user_py.alpha = 1;    user_py.funcnr = 4;     user_py.func = func
    user_py.xr, user_py.wg = ezt.gauss_legendre('quad',n=3 )
    user_py.phi, user_py.dphi = ezt.basis_function('quad','Q2', user_py.xr );
    A_py,f_py = ezt.build_system ( mesh_py, problem_py, ezt.poisson_elem, user_py)
    iess_py = ezt.define_essential ( mesh_py, problem_py,'curves', [0,1,2,3], degfd=0 );
    uess_py = ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [0,1], func, funcnr=3 );    ezt.fill_system_vector ( mesh_py, problem_py, 'curves', [2,3], func, funcnr=3, f=uess_py )
    ezt.apply_essential ( A_py, f_py, uess_py, iess_py )
    u_py = spsolve(A_py.tocsr(), f_py)
    user_py2 = user_py;    xr_py = ezt.refcoor_nodal_points ( mesh_py );    user_py2.phi, user_py2.dphi = ezt.basis_function('quad','Q2', xr_py );    user_py2.u = u_py;    gradu_py = ezt.deriv_vector ( mesh_py, problem_py, ezt.poisson_deriv, user_py2 )
    self.assertTrue(gradu_ez==gradu_py,'deriv_vector failed test, max diff = '+str((abs(gradu_ez.u-gradu_py.u)).max()) )
